// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0

package database

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type EntryType string

const (
	EntryTypeINCOME  EntryType = "INCOME"
	EntryTypeEXPENSE EntryType = "EXPENSE"
)

func (e *EntryType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = EntryType(s)
	case string:
		*e = EntryType(s)
	default:
		return fmt.Errorf("unsupported scan type for EntryType: %T", src)
	}
	return nil
}

type NullEntryType struct {
	EntryType EntryType `json:"entry_type"`
	Valid     bool      `json:"valid"` // Valid is true if EntryType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullEntryType) Scan(value interface{}) error {
	if value == nil {
		ns.EntryType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.EntryType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullEntryType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.EntryType), nil
}

type Account struct {
	ID        int64        `json:"id"`
	Name      string       `json:"name"`
	Balance   float64      `json:"balance"`
	UserID    int64        `json:"user_id"`
	CreatedAt time.Time    `json:"created_at"`
	UpdatedAt time.Time    `json:"updated_at"`
	DeletedAt sql.NullTime `json:"deleted_at"`
}

type Card struct {
	ID        int64         `json:"id"`
	UserID    int64         `json:"user_id"`
	Name      string        `json:"name"`
	CardLimit float64       `json:"card_limit"`
	DueDate   int32         `json:"due_date"`
	FamilyID  sql.NullInt64 `json:"family_id"`
	CreatedAt time.Time     `json:"created_at"`
	UpdatedAt time.Time     `json:"updated_at"`
	DeletedAt sql.NullTime  `json:"deleted_at"`
}

type Category struct {
	ID        int64        `json:"id"`
	Name      string       `json:"name"`
	CreatedAt time.Time    `json:"created_at"`
	UpdatedAt time.Time    `json:"updated_at"`
	DeletedAt sql.NullTime `json:"deleted_at"`
}

type Entry struct {
	ID           int64         `json:"id"`
	Title        string        `json:"title"`
	Amount       float64       `json:"amount"`
	AccountID    sql.NullInt64 `json:"account_id"`
	Installments sql.NullInt32 `json:"installments"`
	Type         EntryType     `json:"type"`
	CategoryID   int64         `json:"category_id"`
	InvoiceID    sql.NullInt64 `json:"invoice_id"`
	Payday       sql.NullTime  `json:"payday"`
	PaidAt       sql.NullTime  `json:"paid_at"`
	CreatedAt    time.Time     `json:"created_at"`
	UpdatedAt    time.Time     `json:"updated_at"`
	DeletedAt    sql.NullTime  `json:"deleted_at"`
}

type Family struct {
	ID        int64        `json:"id"`
	Name      string       `json:"name"`
	UserID    int64        `json:"user_id"`
	CreatedAt time.Time    `json:"created_at"`
	UpdatedAt time.Time    `json:"updated_at"`
	DeletedAt sql.NullTime `json:"deleted_at"`
}

type Installment struct {
	ID        int64        `json:"id"`
	Amount    float64      `json:"amount"`
	EntryID   int64        `json:"entry_id"`
	Payday    sql.NullTime `json:"payday"`
	PaidAt    sql.NullTime `json:"paid_at"`
	CreatedAt time.Time    `json:"created_at"`
	UpdatedAt time.Time    `json:"updated_at"`
	DeletedAt sql.NullTime `json:"deleted_at"`
}

type Invoice struct {
	ID        int64        `json:"id"`
	Amount    float64      `json:"amount"`
	AccountID int64        `json:"account_id"`
	CloseAt   time.Time    `json:"close_at"`
	CardID    int64        `json:"card_id"`
	DueAt     time.Time    `json:"due_at"`
	PaidAt    sql.NullTime `json:"paid_at"`
	CreatedAt time.Time    `json:"created_at"`
	UpdatedAt time.Time    `json:"updated_at"`
	DeletedAt sql.NullTime `json:"deleted_at"`
}

type Member struct {
	ID        int64        `json:"id"`
	FamilyID  int64        `json:"family_id"`
	UserID    int64        `json:"user_id"`
	CreatedAt time.Time    `json:"created_at"`
	UpdatedAt time.Time    `json:"updated_at"`
	DeletedAt sql.NullTime `json:"deleted_at"`
}

type User struct {
	ID        int64          `json:"id"`
	Name      string         `json:"name"`
	Email     string         `json:"email"`
	Password  string         `json:"password"`
	Avatar    sql.NullString `json:"avatar"`
	CreatedAt time.Time      `json:"created_at"`
	UpdatedAt time.Time      `json:"updated_at"`
	DeletedAt sql.NullTime   `json:"deleted_at"`
}
